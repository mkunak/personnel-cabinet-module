{{!-- <form class="user_new_password_form" name="user_new_password_form" method="POST" action="/new-password"> --}}
<form class="user_new_password_form">
  <div class="user_form_header__block">
    <h3 class="user_form_header">New password</h3>
  </div>

  <div class="input-field">
    <input type="password" required id="user_new_password_form_password" name="new_password" />
    <label for="user_new_password_form_password">New password</label>
  </div>

  <div class="input-field">
    <input type="password" required id="user_new_password_form_password_repeat" name="new_password_repeat" />
    <label for="user_new_password_form_password_repeat">Repeat new password</label>
  </div>

  <input type="hidden" name="_csrf" value="{{csrf}}" />
  <input type="hidden" id="user_new_password_form_user_id" name="userId" value="{{userId}}" />
  <input type="hidden" id="user_new_password_form_token" name="token" value="{{token}}" />

  <div class="submit-block"
    {{!-- style="display: flex; flex-direction: row; align-items: center; justify-content: space-between; padding: 1.5rem 4rem;" --}}>
    <button class="btn-submit btn-change-pswd">Change password</button>
  </div>
</form>

<script>
  document.querySelector('.btn-submit.btn-change-pswd').addEventListener("click", function (e) {
    e.preventDefault();

    const new_password = document.getElementById('user_new_password_form_password').value;
    const new_password_repeat = document.getElementById('user_new_password_form_password_repeat').value;
    // const userId = document.getElementById('user_new_password_form_user_id').value;
    // const token = document.getElementById('user_new_password_form_token').value;

    const csrf = '{{csrf}}';
    const token = '{{token}}';
    const userId = '{{userId}}';

    const formData = new FormData();
    formData.append('new_password', new_password);
    formData.append('new_password_repeat', new_password_repeat);
    formData.append('userId', userId);
    formData.append('token', token);

    axios.defaults.headers.post['X-CSRF-Token'] = csrf;
    axios.defaults.headers.post['Content-Type'] = 'multipart/form-data';
    axios.post(`/new-password/${token}`, formData)
      .then(function (response) {
        const { message, messageType } = response.data;

        const onAfterClose = (messageType) => {
          if (messageType === 'success') {
            return () => window.location.href = '/login';
          }
          return () => window.location.reload();
        }

        Swal.fire({
          title: `${messageType.toUpperCase()}!`,
          text: message,
          icon: messageType,
          confirmButtonText: 'Ok',
          onAfterClose: onAfterClose(messageType),
        });

      })
      .catch(function (error) {
        console.log(error);
      });
  })
</script>